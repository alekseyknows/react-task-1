{"version":3,"sources":["views/Counter/styles.js","views/Counter/index.js","containers/CounterContainer.js","App.js","index.js"],"names":["useStyles","makeStyles","container","margin","maxWidth","textAlign","buttons","marginTop","incrementButton","color","decrementButton","resetButton","text","fontSize","fontWeight","Counter","props","classes","className","counter","ButtonGroup","Button","onClick","increment","decrement","reset","CounterContainer","setState","state","this","Component","App","ReactDOM","render","document","getElementById"],"mappings":"2OAKMA,EAAYC,YAAW,CAEzBC,UAAW,CACPC,OAAQ,iBACRC,SAAU,SACVC,UAAW,UAEfC,QAAS,CACLC,UAAW,QAEfC,gBAAiB,CACbC,MAAO,SAEXC,gBAAiB,CACbD,MAAO,OAEXE,YAAa,CACTF,MAAO,QAEXG,KAAM,CACFC,SAAU,GACVC,WAAY,U,OCQLC,EAxBC,SAACC,GAQjB,IAAMC,EAAUjB,IAEZ,OACI,sBAAKkB,UAAWD,EAAQf,UAAxB,UACI,qBAAKgB,UAAWD,EAAQL,KAAxB,sCAAqDI,EAAMG,WAC3D,eAACC,EAAA,EAAD,CAAaF,UAAWD,EAAQX,QAAhC,UACI,cAACe,EAAA,EAAD,CAAQH,UAAWD,EAAQT,gBAAiBc,QAASN,EAAMO,UAA3D,4BAGA,cAACF,EAAA,EAAD,CAAQH,UAAWD,EAAQP,gBAAiBY,QAASN,EAAMQ,UAA3D,4BACA,cAACH,EAAA,EAAD,CAAQH,UAAWD,EAAQN,YAAaW,QAASN,EAAMS,MAAvD,0BCgBDC,E,kDArCX,WAAYV,GAAQ,IAAD,8BACf,cAAMA,IAMVO,UAAY,WACR,EAAKI,UAAS,SAACC,GAAD,MAAY,CACtBT,UAAWS,EAAMT,aATN,EAanBK,UAAY,WACR,EAAKG,UAAS,SAACC,GAAD,MAAY,CACtBT,UAAWS,EAAMT,aAfN,EAmBnBM,MAAQ,WACJ,EAAKE,UAAS,iBAAO,CACjBR,QAAS,OAnBb,EAAKS,MAAQ,CACTT,QAAS,GAHE,E,0CAyBnB,WACI,OACI,cAAC,EAAD,CACIA,QAASU,KAAKD,MAAMT,QACpBI,UAAWM,KAAKN,UAChBC,UAAWK,KAAKL,UAChBC,MAAOI,KAAKJ,Y,GAhCGK,aCOhBC,E,4JATX,WACI,OACI,qBAAKb,UAAU,YAAf,SACI,cAAC,EAAD,U,GAJEY,aCElBE,IAASC,OAAO,cAAC,EAAD,IAASC,SAASC,eAAe,W","file":"static/js/main.8043434d.chunk.js","sourcesContent":["// material-ui\r\n// стили, представленные в виде js\r\n\r\nimport { makeStyles } from '@material-ui/core';\r\n\r\nconst useStyles = makeStyles({\r\n    \r\n    container: {\r\n        margin: '200px auto 0px',\r\n        maxWidth: '1120px',\r\n        textAlign: 'center',\r\n    },\r\n    buttons: {\r\n        marginTop: '50px',\r\n    },\r\n    incrementButton: {\r\n        color: 'green',\r\n    },\r\n    decrementButton: {\r\n        color: 'red',\r\n    },\r\n    resetButton: {\r\n        color: 'grey',\r\n    },\r\n    text: {\r\n        fontSize: 40,\r\n        fontWeight: 'bold',\r\n    }\r\n});\r\n\r\nexport { useStyles };\r\n","// arrow function\r\n// здесь вся html разметка\r\n// подключает переданные props для кнопок\r\n\r\nimport PropTypes from 'prop-types';\r\nimport Button from '@material-ui/core/Button';\r\nimport ButtonGroup from '@material-ui/core/ButtonGroup';\r\n\r\nimport {useStyles} from './styles';\r\n\r\nconst Counter = (props) => {\r\n    Counter.propTypes = {\r\n        counter: PropTypes.number,\r\n        increment: PropTypes.func,\r\n        decrement: PropTypes.func,\r\n        reset: PropTypes.func,\r\n    };\r\n\r\nconst classes = useStyles();\r\n\r\n    return (\r\n        <div className={classes.container}>\r\n            <div className={classes.text}>{`Current counter is ${props.counter}`}</div>\r\n            <ButtonGroup className={classes.buttons} >\r\n                <Button className={classes.incrementButton} onClick={props.increment}>\r\n                    Increment (+1)\r\n                </Button>\r\n                <Button className={classes.decrementButton} onClick={props.decrement}>Decrement (-1)</Button>\r\n                <Button className={classes.resetButton} onClick={props.reset}>Reset</Button>\r\n            </ButtonGroup>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Counter;\r\n","// здесь вся логика счетчика (хранение + изменение), не должен содержать html\r\n// в return <Counter {...props}/>\r\n\r\nimport React, { Component } from 'react';\r\nimport Counter from '../views/Counter/index';\r\n\r\nclass CounterContainer extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            counter: 0,\r\n        };\r\n    }\r\n\r\n    increment = () => {\r\n        this.setState((state) => ({\r\n            counter: ++state.counter,\r\n        }));\r\n    };\r\n\r\n    decrement = () => {\r\n        this.setState((state) => ({\r\n            counter: --state.counter,\r\n        }));\r\n    };\r\n\r\n    reset = () => {\r\n        this.setState(() => ({\r\n            counter: 0,\r\n        }));\r\n    };\r\n\r\n    render() {\r\n        return (\r\n            <Counter\r\n                counter={this.state.counter}\r\n                increment={this.increment}\r\n                decrement={this.decrement}\r\n                reset={this.reset}\r\n            />\r\n        );\r\n    }\r\n}\r\n\r\nexport default CounterContainer;\r\n","import React, { Component } from 'react';\nimport CounterContainer from './containers/CounterContainer';\n\nclass App extends Component {\n    render() {\n        return (\n            <div className=\"container\">\n                <CounterContainer />\n            </div>\n        );\n    }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}